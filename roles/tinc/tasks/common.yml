---

# Compile from git:
# git clone https://github.com/gsliepen/tinc && cd tinc/
# git checkout release-{{ tinc_version }}
# sudo apt-get install gcc autoconf make texinfo libncurses-dev libreadline-dev liblzo2-dev zlib1g-dev libssl-dev
# autoreconf -fis
# ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var
# make

- name: tinc VPN | remove default package
  tags:
  - package
  package:
    name: tinc
    state: absent

- name: tinc VPN | dependencies
  tags:
  - package
  package:
    name: "{{ item }}"
    state: latest
  with_items:
  - openssl
  - liblzo2-2
  notify: restart tinc

- name: tinc VPN | dhcpcd (OpenVZ)
  tags:
  - package
  apt:
    name: dhcpcd5
    install_recommends: no
  when: ansible_virtualization_type == 'openvz'
  notify: restart tinc

- name: tinc VPN | directory
  tags:
  - dir
  file:
    dest: "{{ tinc_dir }}/hosts"
    state: directory
  notify: restart tinc

- name: tinc VPN | binaries
  tags:
  - binary
  copy:
    src: "bin/{{ tinc_version }}/{{ ansible_architecture }}/{{ item }}"
    dest: /usr/sbin/
    mode: 0755
  with_items:
  - tinc
  - tincd
  notify: restart tinc

- name: tinc VPN | systemd unit files
  copy:
    src: "{{ item }}"
    dest: /lib/systemd/system/
  with_items:
  - tinc.service
  - tinc@.service
  notify: restart tinc

- name: tinc VPN | systemd-networkd config
  tags:
  - config
  template:
    src: vpn.network.j2
    dest: "/etc/systemd/network/20-tinc_{{ tinc_name }}.network"
  notify:
    - restart networkd
    - restart tinc

- name: tinc VPN | config
  tags:
  - config
  template:
    src: "{{ item }}.j2"
    dest: "{{ tinc_dir }}/{{ item }}"
    mode: 0700
  with_items:
  - tinc.conf
  - tinc-up
  - tinc-down
  notify: restart tinc

- name: tinc VPN | private key
  tags:
  - config
  - crypt
  copy:
    src: "{{ item }}"
    dest: "{{ tinc_dir }}/{{ item | regex_replace('^.*/([^/]*)/_[^/]*$', '\\1') }}_key.priv"
    mode: 0400
  with_fileglob: 
    - "keys/rsa/_{{ inventory_hostname }}"
    - "keys/ed25519/_{{ inventory_hostname }}"
  notify: restart tinc

- name: tinc VPN | server public keys
  tags:
    - config
    - crypt
  copy:
    src: "keys/pub/_{{ item }}"
    dest: "{{ tinc_dir }}/hosts/{{ item }}"
    mode: 0640
  with_items:
    - tinc1
    - tinc2
  notify: restart tinc

- name: tinc VPN | client public key
  tags:
    - config
    - crypt
  copy:
    src: "keys/pub/_{{ item }}"
    dest: "{{ tinc_dir }}/hosts/{{ item }}"
    mode: 0640
  with_items:
    - "{{ inventory_hostname }}"
  when: '"vpn" not in group_names'
  notify: restart tinc

- name: tinc VPN | service
  tags:
  - service
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
  - tinc
  - "tinc@tinc_{{ tinc_name }}"

---

# Compile from git:
# git clone https://github.com/gsliepen/tinc && cd tinc/
# git checkout release-{{ tinc_version }}
# sudo apt-get install gcc autoconf libncurses-dev libreadline-dev liblzo2-dev zlib1g-dev libssl-dev
# autoreconf -fis
# ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var
# make

- name: tinc VPN | remove default package
  tags:
  - package
  package:
    name: tinc
    state: absent

- name: tinc VPN | dependencies
  tags:
  - package
  package:
    name: "{{ item }}"
    state: latest
  with_items:
  - openssl
  - liblzo2-2
  - dhcpcd5
  - resolvconf
  notify: restart tinc

- name: tinc VPN | directories
  tags:
  - dir
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
  - "/etc/tinc/{{ tinc_net }}/hosts"

- name: tinc VPN | binaries (v1.1)
  tags:
  - binary
  copy:
    src: "bin/{{ tinc_version }}/{{ ansible_architecture }}/{{ item }}"
    dest: /usr/sbin/
    mode: 0755
  with_items:
  - tinc
  - tincd

- name: tinc VPN | systemd unit files
  tags:
  - init
  copy:
    src: "{{ item }}"
    dest: /lib/systemd/system/
  with_items:
  - tinc.service
  - tinc@.service

- name: tinc VPN | config
  tags:
  - config
  template:
    src: "{{ item }}.j2"
    dest: "/etc/tinc/{{ tinc_net }}/{{ item }}"
    mode: 0700
  with_items:
  - tinc.conf
  - tinc-up
  - tinc-down
  notify: restart tinc

- name: tinc VPN | private key
  tags:
  - config
  - crypt
  copy:
    src: ".private/keys/{{ item.src }}"
    dest: "/etc/tinc/{{ tinc_net }}/{{ item.dest }}"
    mode: 0400
  notify: restart tinc
  with_items:
  - { src: "{{ inventory_hostname }}.priv", dest: "rsa_key.priv" }
  - { src: "{{ inventory_hostname }}-ED.priv", dest: "ed25519_key.priv" }

- name: tinc VPN | public keys
  tags:
  - config
  - crypt
  copy:
    src: ".private/hosts/{{ item }}"
    dest: "/etc/tinc/{{ tinc_net }}/hosts/"
    mode: 0640
  with_items:
  - tinc1
  - tinc2
  - "{{ inventory_hostname }}"
  notify: restart tinc

- name: tinc VPN | resolvconf
  tags:
  - config
  copy:
    src: resolv.conf.tail
    dest: /etc/resolvconf/resolv.conf.d/tail

- name: tinc VPN | enable resolvconf
  file:
    src: /etc/resolvconf/run/resolv.conf
    dest: /etc/resolv.conf
    state: link

- name: tinc VPN | service
  tags:
  - service
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
  - tinc
  - "tinc@{{ tinc_net }}"

# on Windows:
# + install new TAP device
# + run as admin: "tincd -n ho"
# + it will install as service
